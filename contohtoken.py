from transformers import T5Tokenizer

tokenizer = T5Tokenizer.from_pretrained("cahya/t5-base-indonesian-summarization-cased")

# text = "MODEL COCOMO Constructive Cost Model = Model Biaya Konstruktif) Tahap Perencanaan ( Estimasi) Model COCOMO Merupakan algoritma estimasi biaya perangkat lunak model yang dikembangkan oleh Barry Boehm. Model ini menggunakan rumus regresi dasar, dengan parameter yang berasal dari data historis dan karakteristik proyek saat ini. Person-month (PM) dianggap sebagai unit yang tepat untuk mengukur upaya, karena developer biasanya ditugaskan ke sebuah proyek selama beberapa bulan tertentu. Perlu dicatat bahwa perkiraan upaya 100 PM tidak berarti bahwa 100 orang harus bekerja selama 1 bulan. Asumsikan bahwa gaji rata-rata seorang developer perangkat lunak adalah Rp. 15.000.000 per bulan. Tentukan upaya yang diperlukan untuk mengembangkan produk perangkat lunak, waktu pengembangan nominal, dan biaya untuk mengembangkan produk. Kelemahan utama dari model COCOMO dasar dan menengah adalah bahwa mereka menganggap produk perangkat lunak sebagai satu kesatuan yang homogen. Namun, sebagian besar sistem besar terdiri dari beberapa sub-sistem yang lebih kecil. Sub-sistem ini seringkali memiliki karakteristik yang sangat berbeda."
text = "MODEL COCOMO Constructive Cost Model = Model Biaya Konstruktif) Tahap Perencanaan ( Estimasi) Model COCOMO Merupakan algoritma estimasi biaya perangkat lunak model yang dikembangkan oleh Barry Boehm. Model ini menggunakan rumus regresi dasar, dengan parameter yang berasal dari data historis dan karakteristik proyek proyek saat ini. Motivasi utama... Untuk tiga kategori produk, Boehm menyediakan rangkaian ekspresi yang berbeda untuk memprediksi Upaya/ usaha (dalam satuan orang-bulan - PM) dan waktu pengembangan dari estimasi ukuran yang diberikan dalam kilo baris kode sumber (KLSC). Perlu dicatat bahwa perkiraan upaya 100 PM tidak berarti bahwa 100 orang harus bekerja selama 1 bulan. Juga tidak berarti bahwa 1 orang harus dipekerjakan selama 100 bulan untuk menyelesaikan proyek. Untuk tiga kelas produk perangkat lunak, rumus untuk memperkirakan usaha berdasarkan ukuran kode ditunjukkan di bawah ini. Asumsikan bahwa ukuran produk perangkat lunak tipe organik telah diperkirakan 32. 000 baris kode sumber. Dengan menambahkan atribut yang dapat menentukan jumlah biaya dan tenaga dalam pengembangan perangkat lunak, yang dijabarkan dalam kategori dan subkatagori sebagai berikut: (Boehm mengharuskan manajer proyek untuk menilai 15 parameter yang berbeda untuk proyek tertentu). Konsumen lunak menganggap produk perangkat lunak sebagai satu kesatuan yang homogen. Namun, sebagian besar sistem besar terdiri dari beberapa sub-sistem yang lebih kecil. Sub-sistem ini seringkali memiliki karakteristik yang sangat berbeda. Tidak hanya kompleksitas pengembangan yang melekat pada subsistem yang berbeda, tetapi untuk beberapa subsistem persyaratan keandalan mungkin tinggi, untuk beberapa tim pengembangan mungkin tidak memiliki pengalaman pengembangan serupa sebelumnya, dan seterusnya. Biaya untuk ketiga komponen ini dapat diperkirakan secara terpisah, dan dijumlahkan untuk memberikan biaya keseluruhan sistem. Untuk lebih meningkatkan akurasi hasil, nilai parameter yang berbeda dari model dapat disesuaikan dan divalidasi terhadap database proyek historis organisasi untuk mendapatkan estimasi yang lebih akurat."

tokens = tokenizer.tokenize(text)
id = tokenizer.convert_tokens_to_ids(tokens)

print("Kata:", tokens)
print("Angka:", id)
print("Jumlah token: ", len(id))